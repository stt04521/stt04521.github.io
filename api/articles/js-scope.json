{"title":"javascript 作用域 作用域链 垃圾回收 闭包","slug":"js-scope","date":"2017-07-10T14:13:05.000Z","updated":"2017-07-10T15:40:43.000Z","comments":true,"excerpt":"<p>对javascript 的 作用域  作用域链 垃圾回收 闭包 进行解读</p>","content":"<p>对javascript 的 作用域  作用域链 垃圾回收 闭包 进行解读</p>\n<a id=\"more\"></a>\n<p>###前言<br>回顾基础，总结巩固，是一件非常重要的事，故此整理此篇文章。对js中比较基础但是又经常会遇见的知识点进行总结。</p>\n<p>####作用域及执行环境</p>\n<p>说起作用域用执行环境这个概念对比来理解的更为直观，作用域涉及到所被调用函数中的变量访问，并且不同的调用场景是不一样的。执行环境始终是this关键字的值，它是拥有当前所执行代码的对象的引用。</p>\n<p>####什么是作用域<br>作用域是你的代码在运行时，各个变量、函数和对象的可访问性。换句话说，作用域决定了你的代码里的变量和其他资源在各个区域中的可见性。</p>\n<p>###Javascript中的作用域</p>\n<p>javascript中有两种作用域</p>\n<ul>\n<li>全局作用域</li>\n<li>局部作用域</li>\n</ul>\n<p>当变量定义在一个函数中时，变量就在局部作用域中，而定义在函数之外的变量则从属于全局作用域。每个函数在调用的时候会创建一个新的作用域。</p>\n<p>###全局作用域<br>当你在文档中（document）编写 JavaScript 时，你就已经在全局作用域中了。JavaScript 文档中（document）只有一个全局作用域。定义在函数之外的变量会被保存在全局作用域中。</p>\n<pre><code>var stt = &quot;Hello&quot;\n</code></pre><p>全局作用域里的变量能够在其他作用域中被访问和修改。</p>\n<pre><code>var stt = &quot;Hello&quot;\n\nconsole.log(stt);\n\nfunction logName() {\n    stt = &quot;olleh&quot;\n    console.log(name);\n};\n\nlogName() //&quot;olleh&quot;\n</code></pre><p>###局部作用域</p>\n<p>定义在函数中的变量就在局部作用域中。并且函数在每次调用时都有一个不同的作用域。这意味着同名变量可以用在不同的函数中。因为这些变量绑定在不同的函数中，拥有不同作用域，彼此之间不能访问。</p>\n<pre><code>function logName() {\n    var stt = &quot;olleh&quot;\n};\n\nconsole.log(stt);\n//stt is not defined\n</code></pre><p>###块语句</p>\n<p>块级声明包括if和switch，以及for和while循环，和函数不同，它们不会创建新的作用域。在块级声明中定义的变量从属于该块所在的作用域。</p>\n<pre><code>if(true){\n    var stt = &quot;Hello&quot;\n}\n\nconsole.log(stt)//&quot;Hello&quot;\n</code></pre><p>es6中let和const关键字支持在块级声明中创建使用局部作用域。</p>\n<pre><code>if(true){\n    let stt = &quot;Hello&quot;;\n    const likes = &quot;Coding&quot;;\n}\n\nconsole.log(stt)//stt is not defined\nconsole.log(likes)//likes is not defined\n</code></pre><p>###上下文</p>\n<p>很多开发者经常弄混作用域和上下文，似乎两者是一个概念。但并非如此。作用域是我们上面讲到的那些，而上下文通常涉及到你代码某些特殊部分中的this值。作用域指的是变量的可见性，而上下文指的是在相同的作用域中的this的值。我们当然也可以使用函数方法改变上下文，这个之后我们再讨论。在全局作用域中，上下文总是 Window 对象。</p>\n","thumbnail":"https://i.pximg.net/c/600x600/img-master/img/2017/07/06/00/30/55/63724173_p0_master1200.jpg","categories":[{"name":"技术","path":"api/categories/技术.json"}],"tags":[{"name":"javascript","path":"api/tags/javascript.json"}]}